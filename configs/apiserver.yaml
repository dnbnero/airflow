apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-apiserver
  labels:
    app: airflow-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-apiserver
  template:
    metadata:
      labels:
        app: airflow-apiserver
    spec:
      initContainers:
      - name: airflow-init
        image: ghcr.io/dnbnero/airflow
        envFrom:
          - secretRef:
              name: airflow-secrets
        env:
          - name: _AIRFLOW_WWW_USER_CREATE
            value: "true"
          - name: _AIRFLOW_DB_MIGRATE
            value: "true"
        volumeMounts:
            - name: config
              mountPath: "/opt/airflow/config/"
              readOnly: true
        args:
          - airflow
          - db
          - check-migrations
      containers:
      - name: apiserver
        image: ghcr.io/dnbnero/airflow:v1
        envFrom:
          - secretRef:
              name: airflow-secrets
        args:
          - airflow 
          - api-server
        volumeMounts:
            - name: config
              mountPath: "/opt/airflow/config/"
              readOnly: true
      volumes:
        - name: config
          projected:
            sources:
              - configMap:
                  name: airflow-cfg
---
apiVersion: v1
kind: Service
metadata:
  name: api-server
spec:
  selector:
    app: airflow-apiserver
  ports:
  - port: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: airflow-apiserver-nodeport
spec:
  type: NodePort
  selector:
    app: airflow-apiserver
  ports:
  - port: 8080